name: CI

on:
  push:
    branches: [master]
    tags: ["*"]
  pull_request:
    branches: ["*"]
  schedule:
    - cron: '0 0 * * 3'

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Install Erlang/Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: "25"
          elixir-version: "1.14"

      - name: Check cargo fmt
        run: cargo fmt --all -- --check

      - name: Check mix format (rustler_mix)
        working-directory: rustler_mix
        run: mix format --check-formatted

      - name: Check mix format (rustler_tests)
        working-directory: rustler_tests
        run: mix format --check-formatted

  clippy:
    name: Clippy ${{matrix.os}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: OTP ${{matrix.pair.erlang}} / Elixir ${{matrix.pair.elixir}} / Rust ${{matrix.rust}} / OS ${{matrix.os}}
    needs: [format, clippy]
    strategy:
      matrix:
        pair:
          - { erlang: "25", elixir: "1.14", latest: true }
          - { erlang: "24", elixir: "1.13" }
          - { erlang: "23", elixir: "1.12" }
        rust:
          - stable
          - nightly
        os:
          - macos-11
          - windows-latest
          # TODO change this to ubuntu-latest after OTP 23 is deprecated, see
          # https://github.com/erlef/setup-beam#compatibility-between-operating-system-and-erlangotp
          # for compatibility
          - ubuntu-20.04
    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Erlang/Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.pair.erlang}}
          elixir-version: ${{matrix.pair.elixir}}
        if: "!startsWith(matrix.os, 'macos')"

      - name: Install Erlang/Elixir with Brew
        run: |
          brew install elixir
          mix local.hex --force
        if: "startsWith(matrix.os, 'macos')"

      - name: Install Rust ${{matrix.rust}} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}

      - run: cargo test

      - name: Test rustler_mix
        working-directory: rustler_mix
        run: |
          mix deps.get
          mix test

      - name: Test rustler_tests
        working-directory: rustler_tests
        run: |
          mix deps.get
          mix test

      - name: Test mix project with example created from template
        working-directory: rustler_mix
        run: ./test.sh
        if: "startsWith(matrix.os, 'ubuntu') && matrix.pair.latest"
